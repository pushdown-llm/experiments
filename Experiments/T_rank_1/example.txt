




BEGIN;

CREATE INDEX idx_customer_custkey ON customer(c_custkey) INCLUDE (c_nationkey);
CREATE INDEX idx_orders_custkey ON orders(o_custkey) INCLUDE (o_totalprice);

CREATE MATERIALIZED VIEW mv_t_rank_1 AS 
SELECT 
    c.c_nationkey,
    c.c_custkey,
    SUM(o.o_totalprice) AS total_price
FROM 
    customer c
JOIN 
    orders o ON c.c_custkey = o.o_custkey
GROUP BY 
    c.c_nationkey, c.c_custkey;

CREATE INDEX idx_mv_t_rank_1_nationkey_price ON mv_t_rank_1 (c_nationkey, total_price DESC) 
INCLUDE (c_custkey);

WITH ranked_customers AS (
    SELECT 
        c_nationkey,
        c_custkey,
        total_price,
        ROW_NUMBER() OVER (
            PARTITION BY c_nationkey 
            ORDER BY total_price DESC
        ) AS customer_position
    FROM 
        mv_t_rank_1
)
SELECT 
    n.n_name,
    rc.customer_position,
    rc.c_custkey,
    rc.total_price AS "Total price"
FROM 
    ranked_customers rc
JOIN 
    nation n ON rc.c_nationkey = n.n_nationkey
WHERE 
    rc.customer_position <= 3
ORDER BY 
    n.n_name, rc.customer_position;


"GroupAggregate  (cost=1.36..78028.51 rows=150000 width=40)"
"  Group Key: c.c_custkey"
"  ->  Merge Join  (cost=1.36..68653.51 rows=1500000 width=16)"
"        Merge Cond: (c.c_custkey = o.o_custkey)"
"        ->  Index Only Scan using idx_customer_custkey on customer c  (cost=0.42..3916.44 rows=150000 width=8)"
"        ->  Index Only Scan using idx_orders_custkey on orders o  (cost=0.43..45612.43 rows=1500000 width=12)"

"Sort  (cost=9918.46..9949.71 rows=12500 width=148)"
"  Sort Key: n.n_name, (row_number() OVER (?))"
"  ->  Hash Join  (cost=2.06..9067.86 rows=12500 width=148)"
"        Hash Cond: (mv_t_rank_1.c_nationkey = n.n_nationkey)"
"        ->  WindowAgg  (cost=0.50..7798.29 rows=99996 width=48)"
"              Run Condition: (row_number() OVER (?) <= 3)"
"              ->  Index Only Scan using idx_mv_t_rank_1_nationkey_price on mv_t_rank_1  (cost=0.42..6048.36 rows=99996 width=40)"
"        ->  Hash  (cost=1.25..1.25 rows=25 width=108)"
"              ->  Seq Scan on nation n  (cost=0.00..1.25 rows=25 width=108)"